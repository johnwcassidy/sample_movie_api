openapi: 3.0.0
info:
  title: Sample Movie API
  description: Sample API to fetch movies and assets by category
  version: 1.0.0
servers:
  - url: https://sample-movie-api.web.app
paths:
  /watchlist/:id:
    delete:
      description: Delete watchlist item
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully deleted watchlist item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - bearerAuth: []
    patch:
      description: Update watchlist item
      requestBody:
        description: Username and Password for authentication
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                bookmark:
                  type: number
                  format: double
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully updated watchlist item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - bearerAuth: []
  /watchlist:
    get:
      description: Retrieve watchlist specific to logged in user
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully returned a list of Watchlist Movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WatchListItem'
      security:
      - bearerAuth: []
    post:
      description: Create new watchlist item for movie asset
      requestBody:
        description: Username and Password for authentication
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                bookmark:
                  type: number
                  format: double
                movie_id:
                  type: string
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully created new watchlist asset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - bearerAuth: []
  /login:
    post:
      description: Authenticate user
      requestBody:
        description: Username and Password for authentication
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                password:
                  type: string
                username:
                  type: string
        required: true
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully returned a list of Movies by optional Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  email:
                    type: string
  /movies:
    get:
      description: Returns a list of Movies
      parameters:
        - $ref: '#/components/schemas/Category'
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully returned a list of Movies by optional Category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
  /categories:
    get:
      description: Returns a list of Categories
      responses:
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        200:
          description: Successfully returned a list of Categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
components:
  schemas:
    WatchListItem:
      type: object
      properties:
        movies:
          $ref: '#/components/schemas/Movie'
        bookmark:
          type: number
          format: double
        id:
          type: string
    Movie:
      type: object
      properties:
        id:
          type: string
        video:
          type: string
        image:
          type: string
        description:
          type: string
        title:
          type: string
    Category:
      type: object
      properties:
        filter:
          type: string
        title:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT